// ‚úÖ  An enum is a type that represents a set of named values.

// üîπ 1. Basic Enum (Numeric)
// Status enum ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü‡¶≠‡¶æ‡¶¨‡ßá ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá‡•§ Success = 0, Error = 1, Loading = 2
enum Status {
  Success,
  Error,
  Loading,
}

let currentStatus: Status = Status.Success;
console.log('Current Status:', currentStatus); // Output: 0

// üîπ 2. String Enum (Readable values)
// ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∞‡ßã‡¶≤‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü string ‡¶Æ‡¶æ‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶è‡¶ü‡¶ø API ‡¶¨‡¶æ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶ü‡¶æ‡¶á‡¶™ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶ø‡¶Ç-‡¶è ‡¶ñ‡ßÅ‡¶¨ ‡¶ï‡¶æ‡¶ú‡ßá ‡¶≤‡¶æ‡¶ó‡ßá‡•§
enum Role {
  Admin = 'ADMIN',
  User = 'USER',
  Guest = 'GUEST',
}

let userRole: Role = Role.User;
console.log('User Role:', userRole); // Output: USER

// üîπ 3. Enum in Function (Real-world usage)
// HttpStatus enum ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ HTTP status code ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø‡•§
enum HttpStatus {
  OK = 200,
  NotFound = 404,
  ServerError = 500,
}

function getMessage(code: HttpStatus): string {
  switch (code) {
    case HttpStatus.OK:
      return 'Request successful!';
    case HttpStatus.NotFound:
      return 'Page not found!';
    case HttpStatus.ServerError:
      return 'Internal server error!';
    default:
      return 'Unknown status';
  }
}

console.log('Message:', getMessage(HttpStatus.NotFound)); // Output: Page not found!

// üîπ 4. Enum with Conditions
// Direction enum ‡¶è‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶ï‡ßã‡¶® ‡¶¶‡¶ø‡¶ï‡ßá ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßá ‡¶§‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§
enum Direction {
  Up,
  Down,
  Left,
  Right,
}

function move(direction: Direction) {
  if (direction === Direction.Up) {
    console.log('Moving up');
  } else if (direction === Direction.Down) {
    console.log('Moving down');
  } else {
    console.log('Moving in another direction');
  }
}

move(Direction.Up); // Output: Moving up

// üî∏ ‡¶â‡¶™‡¶ï‡¶æ‡¶∞‡¶ø‡¶§‡¶æ (Why use enum?)
// - ‡¶¨‡¶æ‡¶∞‡¶¨‡¶æ‡¶∞ string/number ‡¶≤‡¶ø‡¶ñ‡¶æ ‡¶≤‡¶æ‡¶ó‡ßá ‡¶®‡¶æ (No magic values)
// - ‡¶ü‡¶æ‡¶á‡¶™ ‡¶∏‡ßá‡¶´ ‡¶ì ‡¶Ö‡¶ü‡ßã‡¶ï‡¶Æ‡¶™‡ßç‡¶≤‡¶ø‡¶ü ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü
// - ‡¶ï‡ßã‡¶° ‡¶∞‡¶ø‡¶°‡ßá‡¶¨‡¶≤ ‡¶ì ‡¶Æ‡ßá‡¶á‡¶®‡¶ü‡ßá‡¶á‡¶®‡ßá‡¶¨‡¶≤ ‡¶π‡ßü
